# Bake Begins!
### (1 of 6) Copy sources
$ cp -a /home/travis/build/fontdirectory/encodesanswide/METADATA.json /home/travis/build/fontdirectory/encodesanswide/builds/build
$ cp -a /home/travis/build/fontdirectory/encodesanswide/DESCRIPTION.en_us.html /home/travis/build/fontdirectory/encodesanswide/builds/build
$ cp -a /home/travis/build/fontdirectory/encodesanswide/FONTLOG.txt /home/travis/build/fontdirectory/encodesanswide/builds/build
$ cp -a EncodeSansWide-Thin.ttf.ttx EncodeSansWide-SemiBold.ttf.ttx EncodeSansWide-Regular.ttf.ttx EncodeSansWide-Medium.ttf.ttx EncodeSansWide-Light.ttf.ttx EncodeSansWide-ExtraLight.ttf.ttx EncodeSansWide-ExtraBold.ttf.ttx EncodeSansWide-Bold.ttf.ttx EncodeSansWide-Black.ttf.ttx EncodeSansWide-Thin.ttf._p_r_e_p.ttx EncodeSansWide-Thin.ttf._p_o_s_t.ttx EncodeSansWide-Thin.ttf._n_a_m_e.ttx EncodeSansWide-Thin.ttf._m_a_x_p.ttx EncodeSansWide-Thin.ttf._l_o_c_a.ttx EncodeSansWide-Thin.ttf._h_m_t_x.ttx EncodeSansWide-Thin.ttf._h_h_e_a.ttx EncodeSansWide-Thin.ttf._h_e_a_d.ttx EncodeSansWide-Thin.ttf._g_l_y_f.ttx EncodeSansWide-Thin.ttf._g_a_s_p.ttx EncodeSansWide-Thin.ttf._f_p_g_m.ttx EncodeSansWide-Thin.ttf._c_v_t.ttx EncodeSansWide-Thin.ttf._c_m_a_p.ttx EncodeSansWide-Thin.ttf.O_S_2f_2.ttx EncodeSansWide-Thin.ttf.GlyphOrder.ttx EncodeSansWide-Thin.ttf.G_S_U_B_.ttx EncodeSansWide-Thin.ttf.G_P_O_S_.ttx EncodeSansWide-SemiBold.ttf._p_r_e_p.ttx EncodeSansWide-SemiBold.ttf._p_o_s_t.ttx EncodeSansWide-SemiBold.ttf._n_a_m_e.ttx EncodeSansWide-SemiBold.ttf._m_a_x_p.ttx EncodeSansWide-SemiBold.ttf._l_o_c_a.ttx EncodeSansWide-SemiBold.ttf._h_m_t_x.ttx EncodeSansWide-SemiBold.ttf._h_h_e_a.ttx EncodeSansWide-SemiBold.ttf._h_e_a_d.ttx EncodeSansWide-SemiBold.ttf._g_l_y_f.ttx EncodeSansWide-SemiBold.ttf._g_a_s_p.ttx EncodeSansWide-SemiBold.ttf._f_p_g_m.ttx EncodeSansWide-SemiBold.ttf._c_v_t.ttx EncodeSansWide-SemiBold.ttf._c_m_a_p.ttx EncodeSansWide-SemiBold.ttf.O_S_2f_2.ttx EncodeSansWide-SemiBold.ttf.GlyphOrder.ttx EncodeSansWide-SemiBold.ttf.G_S_U_B_.ttx EncodeSansWide-SemiBold.ttf.G_P_O_S_.ttx EncodeSansWide-Regular.ttf._p_r_e_p.ttx EncodeSansWide-Regular.ttf._p_o_s_t.ttx EncodeSansWide-Regular.ttf._n_a_m_e.ttx EncodeSansWide-Regular.ttf._m_a_x_p.ttx EncodeSansWide-Regular.ttf._l_o_c_a.ttx EncodeSansWide-Regular.ttf._h_m_t_x.ttx EncodeSansWide-Regular.ttf._h_h_e_a.ttx EncodeSansWide-Regular.ttf._h_e_a_d.ttx EncodeSansWide-Regular.ttf._g_l_y_f.ttx EncodeSansWide-Regular.ttf._g_a_s_p.ttx EncodeSansWide-Regular.ttf._f_p_g_m.ttx EncodeSansWide-Regular.ttf._c_v_t.ttx EncodeSansWide-Regular.ttf._c_m_a_p.ttx EncodeSansWide-Regular.ttf.O_S_2f_2.ttx EncodeSansWide-Regular.ttf.GlyphOrder.ttx EncodeSansWide-Regular.ttf.G_S_U_B_.ttx EncodeSansWide-Regular.ttf.G_P_O_S_.ttx EncodeSansWide-Medium.ttf._p_r_e_p.ttx EncodeSansWide-Medium.ttf._p_o_s_t.ttx EncodeSansWide-Medium.ttf._n_a_m_e.ttx EncodeSansWide-Medium.ttf._m_a_x_p.ttx EncodeSansWide-Medium.ttf._l_o_c_a.ttx EncodeSansWide-Medium.ttf._h_m_t_x.ttx EncodeSansWide-Medium.ttf._h_h_e_a.ttx EncodeSansWide-Medium.ttf._h_e_a_d.ttx EncodeSansWide-Medium.ttf._g_l_y_f.ttx EncodeSansWide-Medium.ttf._g_a_s_p.ttx EncodeSansWide-Medium.ttf._f_p_g_m.ttx EncodeSansWide-Medium.ttf._c_v_t.ttx EncodeSansWide-Medium.ttf._c_m_a_p.ttx EncodeSansWide-Medium.ttf.O_S_2f_2.ttx EncodeSansWide-Medium.ttf.GlyphOrder.ttx EncodeSansWide-Medium.ttf.G_S_U_B_.ttx EncodeSansWide-Medium.ttf.G_P_O_S_.ttx EncodeSansWide-Light.ttf._p_r_e_p.ttx EncodeSansWide-Light.ttf._p_o_s_t.ttx EncodeSansWide-Light.ttf._n_a_m_e.ttx EncodeSansWide-Light.ttf._m_a_x_p.ttx EncodeSansWide-Light.ttf._l_o_c_a.ttx EncodeSansWide-Light.ttf._h_m_t_x.ttx EncodeSansWide-Light.ttf._h_h_e_a.ttx EncodeSansWide-Light.ttf._h_e_a_d.ttx EncodeSansWide-Light.ttf._g_l_y_f.ttx EncodeSansWide-Light.ttf._g_a_s_p.ttx EncodeSansWide-Light.ttf._f_p_g_m.ttx EncodeSansWide-Light.ttf._c_v_t.ttx EncodeSansWide-Light.ttf._c_m_a_p.ttx EncodeSansWide-Light.ttf.O_S_2f_2.ttx EncodeSansWide-Light.ttf.GlyphOrder.ttx EncodeSansWide-Light.ttf.G_S_U_B_.ttx EncodeSansWide-Light.ttf.G_P_O_S_.ttx EncodeSansWide-ExtraLight.ttf._p_r_e_p.ttx EncodeSansWide-ExtraLight.ttf._p_o_s_t.ttx EncodeSansWide-ExtraLight.ttf._n_a_m_e.ttx EncodeSansWide-ExtraLight.ttf._m_a_x_p.ttx EncodeSansWide-ExtraLight.ttf._l_o_c_a.ttx EncodeSansWide-ExtraLight.ttf._h_m_t_x.ttx EncodeSansWide-ExtraLight.ttf._h_h_e_a.ttx EncodeSansWide-ExtraLight.ttf._h_e_a_d.ttx EncodeSansWide-ExtraLight.ttf._g_l_y_f.ttx EncodeSansWide-ExtraLight.ttf._g_a_s_p.ttx EncodeSansWide-ExtraLight.ttf._f_p_g_m.ttx EncodeSansWide-ExtraLight.ttf._c_v_t.ttx EncodeSansWide-ExtraLight.ttf._c_m_a_p.ttx EncodeSansWide-ExtraLight.ttf.O_S_2f_2.ttx EncodeSansWide-ExtraLight.ttf.GlyphOrder.ttx EncodeSansWide-ExtraLight.ttf.G_S_U_B_.ttx EncodeSansWide-ExtraLight.ttf.G_P_O_S_.ttx EncodeSansWide-ExtraBold.ttf._p_r_e_p.ttx EncodeSansWide-ExtraBold.ttf._p_o_s_t.ttx EncodeSansWide-ExtraBold.ttf._n_a_m_e.ttx EncodeSansWide-ExtraBold.ttf._m_a_x_p.ttx EncodeSansWide-ExtraBold.ttf._l_o_c_a.ttx EncodeSansWide-ExtraBold.ttf._h_m_t_x.ttx EncodeSansWide-ExtraBold.ttf._h_h_e_a.ttx EncodeSansWide-ExtraBold.ttf._h_e_a_d.ttx EncodeSansWide-ExtraBold.ttf._g_l_y_f.ttx EncodeSansWide-ExtraBold.ttf._g_a_s_p.ttx EncodeSansWide-ExtraBold.ttf._f_p_g_m.ttx EncodeSansWide-ExtraBold.ttf._c_v_t.ttx EncodeSansWide-ExtraBold.ttf._c_m_a_p.ttx EncodeSansWide-ExtraBold.ttf.O_S_2f_2.ttx EncodeSansWide-ExtraBold.ttf.GlyphOrder.ttx EncodeSansWide-ExtraBold.ttf.G_S_U_B_.ttx EncodeSansWide-ExtraBold.ttf.G_P_O_S_.ttx EncodeSansWide-Bold.ttf._p_r_e_p.ttx EncodeSansWide-Bold.ttf._p_o_s_t.ttx EncodeSansWide-Bold.ttf._n_a_m_e.ttx EncodeSansWide-Bold.ttf._m_a_x_p.ttx EncodeSansWide-Bold.ttf._l_o_c_a.ttx EncodeSansWide-Bold.ttf._h_m_t_x.ttx EncodeSansWide-Bold.ttf._h_h_e_a.ttx EncodeSansWide-Bold.ttf._h_e_a_d.ttx EncodeSansWide-Bold.ttf._g_l_y_f.ttx EncodeSansWide-Bold.ttf._g_a_s_p.ttx EncodeSansWide-Bold.ttf._f_p_g_m.ttx EncodeSansWide-Bold.ttf._c_v_t.ttx EncodeSansWide-Bold.ttf._c_m_a_p.ttx EncodeSansWide-Bold.ttf.O_S_2f_2.ttx EncodeSansWide-Bold.ttf.GlyphOrder.ttx EncodeSansWide-Bold.ttf.G_S_U_B_.ttx EncodeSansWide-Bold.ttf.G_P_O_S_.ttx EncodeSansWide-Black.ttf._p_r_e_p.ttx EncodeSansWide-Black.ttf._p_o_s_t.ttx EncodeSansWide-Black.ttf._n_a_m_e.ttx EncodeSansWide-Black.ttf._m_a_x_p.ttx EncodeSansWide-Black.ttf._l_o_c_a.ttx EncodeSansWide-Black.ttf._h_m_t_x.ttx EncodeSansWide-Black.ttf._h_h_e_a.ttx EncodeSansWide-Black.ttf._h_e_a_d.ttx EncodeSansWide-Black.ttf._g_l_y_f.ttx EncodeSansWide-Black.ttf._g_a_s_p.ttx EncodeSansWide-Black.ttf._f_p_g_m.ttx EncodeSansWide-Black.ttf._c_v_t.ttx EncodeSansWide-Black.ttf._c_m_a_p.ttx EncodeSansWide-Black.ttf.O_S_2f_2.ttx EncodeSansWide-Black.ttf.GlyphOrder.ttx EncodeSansWide-Black.ttf.G_S_U_B_.ttx EncodeSansWide-Black.ttf.G_P_O_S_.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources
### (2 of 6) pyfontaine
### (3 of 6) Run upstream tests
$ bakery-lint.py upstream-repo sources
$ fontaine --collections subsets --text /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Black.ttf.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Bold.ttf.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-ExtraBold.ttf.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-ExtraLight.ttf.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Light.ttf.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Medium.ttf.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Regular.ttf.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-SemiBold.ttf.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Thin.ttf.ttx > fontaine.txt
WARNING: Please install [PyICU](https://pypi.python.org/pypi/PyICU) toenable [feature], perhaps with: pip install pyicu
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_contours(): OK
end of pyfontaine process
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_points(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_test_prepolation_glyph_names(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_component(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_mark_to_mark(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_own_glyphs(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_bakery_yaml_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_copyright_notices_same_across_family(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_description_html_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_fontlog_txt_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_metadata_json_exists(): OK
$ bakery-lint.py upstream-ttx EncodeSansWide-Black.ttf.ttx
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Black.ttf.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Black.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
$ bakery-lint.py upstream-ttx EncodeSansWide-Bold.ttf.ttx
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Bold.ttf.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Bold.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
$ bakery-lint.py upstream-ttx EncodeSansWide-ExtraBold.ttf.ttx
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-ExtraBold.ttf.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-ExtraBold.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
$ bakery-lint.py upstream-ttx EncodeSansWide-ExtraLight.ttf.ttx
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-ExtraLight.ttf.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-ExtraLight.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): FAIL
$ bakery-lint.py upstream-ttx EncodeSansWide-Light.ttf.ttx
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Light.ttf.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Light.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
$ bakery-lint.py upstream-ttx EncodeSansWide-Medium.ttf.ttx
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Medium.ttf.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Medium.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
$ bakery-lint.py upstream-ttx EncodeSansWide-Regular.ttf.ttx
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Regular.ttf.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
$ bakery-lint.py upstream-ttx EncodeSansWide-SemiBold.ttf.ttx
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-SemiBold.ttf.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-SemiBold.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
$ bakery-lint.py upstream-ttx EncodeSansWide-Thin.ttf.ttx
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): OK
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Thin.ttf.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Thin.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): OK
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): FAIL
### (4 of 6) Convert sources to TTF
$ ttx -d /home/travis/build/fontdirectory/encodesanswide/builds/build /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Thin.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-SemiBold.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Regular.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Medium.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Light.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-ExtraLight.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-ExtraBold.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Bold.ttx /home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Black.ttx
Compiling "/home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Thin.ttx" to "/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Compiling "/home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-SemiBold.ttx" to "/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Compiling "/home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Regular.ttx" to "/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Compiling "/home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Medium.ttx" to "/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Compiling "/home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Light.ttx" to "/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Compiling "/home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-ExtraLight.ttx" to "/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Compiling "/home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-ExtraBold.ttx" to "/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Compiling "/home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Bold.ttx" to "/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
Compiling "/home/travis/build/fontdirectory/encodesanswide/builds/build/sources/EncodeSansWide-Black.ttx" to "/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'GPOS' table...
Parsing 'GSUB' table...
### Test EncodeSansWide-Thin.ttf
$ bakery-lint.py result EncodeSansWide-Thin.ttf
### Test EncodeSansWide-SemiBold.ttf
$ bakery-lint.py result EncodeSansWide-SemiBold.ttf
### Test EncodeSansWide-Regular.ttf
$ bakery-lint.py result EncodeSansWide-Regular.ttf
### Test EncodeSansWide-Medium.ttf
$ bakery-lint.py result EncodeSansWide-Medium.ttf
### Test EncodeSansWide-Light.ttf
$ bakery-lint.py result EncodeSansWide-Light.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
### Test EncodeSansWide-ExtraLight.ttf
$ bakery-lint.py result EncodeSansWide-ExtraLight.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
### Test EncodeSansWide-ExtraBold.ttf
$ bakery-lint.py result EncodeSansWide-ExtraBold.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
### Test EncodeSansWide-Black.ttf
$ bakery-lint.py result EncodeSansWide-Black.ttf
### (5 of 6) Generate METADATA.json (genmetadata.py)
### Test EncodeSansWide-Bold.ttf
$ genmetadata.py /home/travis/build/fontdirectory/encodesanswide/builds/build
$ bakery-lint.py result EncodeSansWide-Bold.ttf
{} exists
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
Designer's name from font is: Pablo Impallari, Andres Torresi
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
Original size: 194692\nGzip size: 88555
Family Name: Encode Sans Wide
PS Name: EncodeSansWide-Black
Full Name: Encode Sans Wide Black
Style: normal
Weight: 900
Filename: EncodeSansWide-Black.ttf
Copyright: Copyright (c) 2012, Impallari Type (www.impallari.com), with Reserved Font Name Encode Sans.
Family Name: Encode Sans Wide
PS Name: EncodeSansWide-Bold
Full Name: Encode Sans Wide Bold
Style: normal
Weight: 700
Filename: EncodeSansWide-Bold.ttf
Copyright: Copyright (c) 2012, Impallari Type (www.impallari.com), with Reserved Font Name Encode Sans.
Family Name: Encode Sans Wide
PS Name: EncodeSansWide-ExtraBold
Full Name: Encode Sans Wide ExtraBold
Style: normal
Weight: 800
Filename: EncodeSansWide-ExtraBold.ttf
Copyright: Copyright (c) 2012, Impallari Type (www.impallari.com), with Reserved Font Name Encode Sans.
Family Name: Encode Sans Wide
PS Name: EncodeSansWide-ExtraLight
Full Name: Encode Sans Wide ExtraLight
Style: normal
Weight: 200
Filename: EncodeSansWide-ExtraLight.ttf
Copyright: Copyright (c) 2012, Impallari Type (www.impallari.com), with Reserved Font Name Encode Sans.
Family Name: Encode Sans Wide
PS Name: EncodeSansWide-Light
Full Name: Encode Sans Wide Light
Style: normal
Weight: 300
Filename: EncodeSansWide-Light.ttf
Copyright: Copyright (c) 2012, Impallari Type (www.impallari.com), with Reserved Font Name Encode Sans.
Family Name: Encode Sans Wide
PS Name: EncodeSansWide-Medium
Full Name: Encode Sans Wide Medium
Style: normal
Weight: 500
Filename: EncodeSansWide-Medium.ttf
Copyright: Copyright (c) 2012, Impallari Type (www.impallari.com), with Reserved Font Name Encode Sans.
Family Name: Encode Sans Wide
PS Name: EncodeSansWide-Regular
Full Name: Encode Sans Wide
Style: normal
Weight: 400
Filename: EncodeSansWide-Regular.ttf
Copyright: Copyright (c) 2012, Impallari Type (www.impallari.com), with Reserved Font Name Encode Sans.
Family Name: Encode Sans Wide
PS Name: EncodeSansWide-SemiBold
Full Name: Encode Sans Wide SemiBold
Style: normal
Weight: 600
Filename: EncodeSansWide-SemiBold.ttf
Copyright: Copyright (c) 2012, Impallari Type (www.impallari.com), with Reserved Font Name Encode Sans.
Family Name: Encode Sans Wide
PS Name: EncodeSansWide-Thin
Full Name: Encode Sans Wide Thin
Style: normal
Weight: 100
Filename: EncodeSansWide-Thin.ttf
Copyright: Copyright (c) 2012, Impallari Type (www.impallari.com), with Reserved Font Name Encode Sans.
### (6 of 6) Run tests for METADATA.json
$ bakery-lint.py metadata METADATA.json
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin_ext(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_menu(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_more_than_500b(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_valid_html(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ bakery-gasp.py --set=15 /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_daltonmaag_catalogue(): FAIL
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ bakery-gasp.py --set=15 /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ bakery-gasp.py --set=15 /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ bakery-gasp.py --set=15 /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ bakery-gasp.py --set=15 /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ bakery-gasp.py --set=15 /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ bakery-gasp.py --set=15 /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontbureau_catalogue(): OK
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ bakery-gasp.py --set=15 /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.ttf
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ bakery-gasp.py --set=15 /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.ttf
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontscom_catalogue(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontshop_catalogue(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontsmith_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_houseind_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_myfonts_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_veer_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_family_is_listed_in_gwf(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_atleast_latin_menu_subsets_exist(): OK
/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_lint/tests/metadata_test.py:141: UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal
  self.assertTrue(designer in designers,
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_designer_exists_in_profiles_csv(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_items_dicts(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_no_dupes(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_has_unique_style_weight_pairs(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_license(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_no_unknown_top_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_subsets_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_top_keys_types(): FAIL
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_contains_correct_rfn(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_is_consistent_across_family(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_matches_pattern(): FAIL
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_metadata_copyright_size(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_font_name_matches_family(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_family(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_family_values_are_all_the_same(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_filename_matches_postScriptName(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_font_have_regular(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fonts_fields_have_fontname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_is_equal_to_internal_font_fullname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_matches_postScriptName(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_postScriptName_matches_ttf_fontname(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_400(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_normal(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_copyrighttxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_description_exists(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_fontlogtxt_exists(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_licensetxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_subsets_exists.CheckSubsetsExist.test_check_subsets_exists(): FAIL
bakery_lint.tests.downstream.test_check_monospace_agreements.CheckMonospaceAgreement.test_check_monospace_agreement(): OK
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckItalicStyleMatchesMacStyle.test_check_italic_style_matches_names(): OK
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckNormalStyleMatchesMacStyle.test_check_normal_style_matches_names(): OK
bakery_lint.tests.downstream.test_check_metadata_matches_nametable.CheckMetadataMatchesNameTable.test_check_metadata_matches_nametable(): OK
bakery_lint.tests.downstream.test_check_metadata_fields.CheckMetadataFields.test_check_metadata_fields(): OK
bakery_lint.tests.downstream.test_check_menu_contains_proper_glyphs.CheckMenuSubsetContainsProperGlyphs.test_check_menu_contains_proper_glyphs(): ERROR
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_encodings_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_names_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_number_of_glyphs_across_family(): OK
bakery_lint.tests.downstream.test_check_font_name_not_in_camelcase.CheckFontNameNotInCamelCase.test_fontname_not_in_camel_case(): OK
bakery_lint.tests.downstream.test_check_files_menu_agreements.CheckFontsMenuAgreements.test_menu_file_agreement(): FAIL
bakery_lint.tests.downstream.test_check_familyname_matches_fontnames.CheckFamilyNameMatchesFontNames.test_check_familyname_matches_fontnames(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckCanonicalWeights.test_check_canonical_weights(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckPostScriptNameMatchesWeight.test_postscriptname_contains_correct_weight(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFontWeightSameAsInMetadata.test_font_weight_same_as_in_metadata(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFullNameEqualCanonicalName.test_metadata_contains_current_font(): OK
bakery_lint.tests.downstream.test_check_canonical_styles.CheckCanonicalStyles.test_check_canonical_styles(): OK
bakery_lint.tests.downstream.test_check_canonical_filenames.CheckCanonicalFilenames.test_check_canonical_filenames(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ bakery-encode-glyphs-fix.py --autofix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
$ bakery-opentype-fix.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
$ bakery-opentype-fix.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ bakery-encode-glyphs-fix.py --autofix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ bakery-dsig.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
$ bakery-opentype-fix.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ bakery-fstype-fix.py --autofix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
$ bakery-opentype-fix.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_file_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ bakery-dsig.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ bakery-fstype-fix.py --autofix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_file_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ bakery-encode-glyphs-fix.py --autofix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ bakery-encode-glyphs-fix.py --autofix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf
### Optimize TTF EncodeSansWide-Light.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
$ bakery-opentype-fix.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
$ bakery-opentype-fix.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
$ bakery-opentype-fix.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
$ bakery-opentype-fix.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ bakery-dsig.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ bakery-fstype-fix.py --autofix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ bakery-dsig.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_file_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ bakery-encode-glyphs-fix.py --autofix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ bakery-fstype-fix.py --autofix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_file_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
### Optimize TTF EncodeSansWide-ExtraLight.ttf
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
$ bakery-opentype-fix.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
$ bakery-opentype-fix.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ bakery-dsig.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ bakery-fstype-fix.py --autofix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_file_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
### Optimize TTF EncodeSansWide-Medium.ttf
### Optimize TTF EncodeSansWide-ExtraBold.ttf
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ bakery-encode-glyphs-fix.py --autofix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
$ bakery-opentype-fix.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
$ bakery-opentype-fix.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf
### Optimize TTF EncodeSansWide-Black.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ bakery-encode-glyphs-fix.py --autofix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ bakery-dsig.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ bakery-fstype-fix.py --autofix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_file_is_font(): OK
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
$ bakery-opentype-fix.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
$ bakery-opentype-fix.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ bakery-dsig.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ bakery-fstype-fix.py --autofix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_file_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
### Optimize TTF EncodeSansWide-SemiBold.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ bakery-encode-glyphs-fix.py --autofix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.ttf
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ bakery-encode-glyphs-fix.py --autofix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ bakery-opentype-fix.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ bakery-opentype-fix.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
### Optimize TTF EncodeSansWide-Thin.ttf
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ bakery-dsig.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.ttf
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.ttf
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ bakery-dsig.py /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ bakery-fstype-fix.py --autofix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_file_is_font(): OK
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ bakery-fstype-fix.py --autofix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.ttf
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.ttf.fix /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_file_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
### Optimize TTF EncodeSansWide-Bold.ttf
### Optimize TTF EncodeSansWide-Regular.ttf
$ ls -l 'EncodeSansWide-Black.ttf'* # look at the size savings of that subset process
EncodeSansWide-Black.ttf.opt: 190348 bytes
EncodeSansWide-Black.ttf: 198892 bytes
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf.opt /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf
### Autohint TTFs (ttfautohint) EncodeSansWide-Black.ttf
$ ls -l 'EncodeSansWide-ExtraLight.ttf'* # look at the size savings of that subset process
EncodeSansWide-ExtraLight.ttf.opt: 182564 bytes
EncodeSansWide-ExtraLight.ttf: 191128 bytes
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf.opt /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf
### Autohint TTFs (ttfautohint) EncodeSansWide-ExtraLight.ttf
$ ls -l 'EncodeSansWide-Medium.ttf'* # look at the size savings of that subset process
EncodeSansWide-Medium.ttf.opt: 194428 bytes
EncodeSansWide-Medium.ttf: 202976 bytes
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf.opt /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf
### Autohint TTFs (ttfautohint) EncodeSansWide-Medium.ttf
$ ls -l /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf: 190348 bytes
/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.autohint.ttf: 205700 bytes
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.autohint.ttf /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf
### Subset TTFs (pyftsubset) EncodeSansWide-Black.ttf
$ ls -l /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf: 182564 bytes
/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.autohint.ttf: 199104 bytes
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.autohint.ttf /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf
### Subset TTFs (pyftsubset) EncodeSansWide-ExtraLight.ttf
$ ls -l 'EncodeSansWide-Light.ttf'* # look at the size savings of that subset process
EncodeSansWide-Light.ttf.opt: 190236 bytes
EncodeSansWide-Light.ttf: 198780 bytes
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf.opt /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf
### Autohint TTFs (ttfautohint) EncodeSansWide-Light.ttf
$ ls -l /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf: 194428 bytes
/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.autohint.ttf: 216204 bytes
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.autohint.ttf /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf
### Subset TTFs (pyftsubset) EncodeSansWide-Medium.ttf
$ ls -l 'EncodeSansWide-Thin.ttf'* # look at the size savings of that subset process
EncodeSansWide-Thin.ttf.opt: 181468 bytes
EncodeSansWide-Thin.ttf: 190008 bytes
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf.opt /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf
### Autohint TTFs (ttfautohint) EncodeSansWide-Thin.ttf
$ ls -l 'EncodeSansWide-ExtraBold.ttf'* # look at the size savings of that subset process
EncodeSansWide-ExtraBold.ttf.opt: 194524 bytes
EncodeSansWide-ExtraBold.ttf: 203084 bytes
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf.opt /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf
### Autohint TTFs (ttfautohint) EncodeSansWide-ExtraBold.ttf
$ ls -l /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf: 190236 bytes
/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.autohint.ttf: 207400 bytes
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.autohint.ttf /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf
### Subset TTFs (pyftsubset) EncodeSansWide-Light.ttf
$ ls -l 'EncodeSansWide-SemiBold.ttf'* # look at the size savings of that subset process
EncodeSansWide-SemiBold.ttf.opt: 196524 bytes
EncodeSansWide-SemiBold.ttf: 205080 bytes
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf.opt /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf
### Autohint TTFs (ttfautohint) EncodeSansWide-SemiBold.ttf
$ ls -l /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf: 181468 bytes
/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.autohint.ttf: 197668 bytes
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.autohint.ttf /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf
### Subset TTFs (pyftsubset) EncodeSansWide-Thin.ttf
$ ls -l /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf: 194524 bytes
/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.autohint.ttf: 213744 bytes
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.autohint.ttf /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf
### Subset TTFs (pyftsubset) EncodeSansWide-ExtraBold.ttf
Generate EncodeSansWide-Black.latin
$ ls -l /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf: 196524 bytes
/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.autohint.ttf: 214616 bytes
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.autohint.ttf /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf
### Subset TTFs (pyftsubset) EncodeSansWide-SemiBold.ttf
Generate EncodeSansWide-ExtraLight.latin
$ ls -l 'EncodeSansWide-Bold.ttf'* # look at the size savings of that subset process
EncodeSansWide-Bold.ttf.opt: 194220 bytes
EncodeSansWide-Bold.ttf: 202756 bytes
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.ttf.opt /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.ttf
### Autohint TTFs (ttfautohint) EncodeSansWide-Bold.ttf
Generate EncodeSansWide-Black.menu
strippedname:/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Black.ttf
Generate EncodeSansWide-ExtraLight.menu
strippedname:/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraLight.ttf
$ ls -l 'EncodeSansWide-Regular.ttf'* # look at the size savings of that subset process
EncodeSansWide-Regular.ttf.opt: 194584 bytes
EncodeSansWide-Regular.ttf: 203100 bytes
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.ttf.opt /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.ttf
### Autohint TTFs (ttfautohint) EncodeSansWide-Regular.ttf
Generate EncodeSansWide-Medium.latin
$ ls -l /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.ttf: 194220 bytes
/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.autohint.ttf: 213740 bytes
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.autohint.ttf /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.ttf
### Subset TTFs (pyftsubset) EncodeSansWide-Bold.ttf
Generate EncodeSansWide-Light.latin
Generate EncodeSansWide-Thin.latin
$ ls -l /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.ttf: 194584 bytes
/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.autohint.ttf: 211996 bytes
$ mv /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.autohint.ttf /home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.ttf
### Subset TTFs (pyftsubset) EncodeSansWide-Regular.ttf
Generate EncodeSansWide-Medium.menu
strippedname:/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Medium.ttf
Generate EncodeSansWide-ExtraBold.latin
Generate EncodeSansWide-SemiBold.latin
Generate EncodeSansWide-Light.menu
strippedname:/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Light.ttf
Generate EncodeSansWide-Thin.menu
strippedname:/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Thin.ttf
Generate EncodeSansWide-ExtraBold.menu
strippedname:/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-ExtraBold.ttf
Generate EncodeSansWide-SemiBold.menu
strippedname:/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-SemiBold.ttf
Generate EncodeSansWide-Bold.latin
Generate EncodeSansWide-Regular.latin
Generate EncodeSansWide-Bold.menu
strippedname:/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Bold.ttf
Generate EncodeSansWide-Regular.menu
strippedname:/home/travis/build/fontdirectory/encodesanswide/builds/build/EncodeSansWide-Regular.ttf
{
  "name": "Encode Sans Wide", 
  "designer": "Impallari Type", 
  "license": "OFL", 
  "visibility": "Sandbox", 
  "category": "Sans Serif", 
  "size": 89773, 
  "fonts": [
    {
      "name": "Encode Sans Wide", 
      "postScriptName": "EncodeSansWide-Black", 
      "fullName": "Encode Sans Wide Black", 
      "style": "normal", 
      "weight": 900, 
      "filename": "EncodeSansWide-Black.ttf", 
      "copyright": "Copyright (c) 2012, Impallari Type (www.impallari.com), with Reserved Font Name Encode Sans."
    }, 
    {
      "name": "Encode Sans Wide", 
      "postScriptName": "EncodeSansWide-Bold", 
      "fullName": "Encode Sans Wide Bold", 
      "style": "normal", 
      "weight": 700, 
      "filename": "EncodeSansWide-Bold.ttf", 
      "copyright": "Copyright (c) 2012, Impallari Type (www.impallari.com), with Reserved Font Name Encode Sans."
    }, 
    {
      "name": "Encode Sans Wide", 
      "postScriptName": "EncodeSansWide-ExtraBold", 
      "fullName": "Encode Sans Wide ExtraBold", 
      "style": "normal", 
      "weight": 800, 
      "filename": "EncodeSansWide-ExtraBold.ttf", 
      "copyright": "Copyright (c) 2012, Impallari Type (www.impallari.com), with Reserved Font Name Encode Sans."
    }, 
    {
      "name": "Encode Sans Wide", 
      "postScriptName": "EncodeSansWide-ExtraLight", 
      "fullName": "Encode Sans Wide ExtraLight", 
      "style": "normal", 
      "weight": 200, 
      "filename": "EncodeSansWide-ExtraLight.ttf", 
      "copyright": "Copyright (c) 2012, Impallari Type (www.impallari.com), with Reserved Font Name Encode Sans."
    }, 
    {
      "name": "Encode Sans Wide", 
      "postScriptName": "EncodeSansWide-Light", 
      "fullName": "Encode Sans Wide Light", 
      "style": "normal", 
      "weight": 300, 
      "filename": "EncodeSansWide-Light.ttf", 
      "copyright": "Copyright (c) 2012, Impallari Type (www.impallari.com), with Reserved Font Name Encode Sans."
    }, 
    {
      "name": "Encode Sans Wide", 
      "postScriptName": "EncodeSansWide-Medium", 
      "fullName": "Encode Sans Wide Medium", 
      "style": "normal", 
      "weight": 500, 
      "filename": "EncodeSansWide-Medium.ttf", 
      "copyright": "Copyright (c) 2012, Impallari Type (www.impallari.com), with Reserved Font Name Encode Sans."
    }, 
    {
      "name": "Encode Sans Wide", 
      "postScriptName": "EncodeSansWide-Regular", 
      "fullName": "Encode Sans Wide", 
      "style": "normal", 
      "weight": 400, 
      "filename": "EncodeSansWide-Regular.ttf", 
      "copyright": "Copyright (c) 2012, Impallari Type (www.impallari.com), with Reserved Font Name Encode Sans."
    }, 
    {
      "name": "Encode Sans Wide", 
      "postScriptName": "EncodeSansWide-SemiBold", 
      "fullName": "Encode Sans Wide SemiBold", 
      "style": "normal", 
      "weight": 600, 
      "filename": "EncodeSansWide-SemiBold.ttf", 
      "copyright": "Copyright (c) 2012, Impallari Type (www.impallari.com), with Reserved Font Name Encode Sans."
    }, 
    {
      "name": "Encode Sans Wide", 
      "postScriptName": "EncodeSansWide-Thin", 
      "fullName": "Encode Sans Wide Thin", 
      "style": "normal", 
      "weight": 100, 
      "filename": "EncodeSansWide-Thin.ttf", 
      "copyright": "Copyright (c) 2012, Impallari Type (www.impallari.com), with Reserved Font Name Encode Sans."
    }
  ], 
  "subsets": [
    "latin"
  ], 
  "dateAdded": "2014-06-18"
}
